version: "2"
services:


  python:
    container_name: isharp-python-dev
    environment:
      mongo_host: mongo
      isharp_hub_host: rabbit:5672
      datahub_host: localhost
      isharp_home: /isharp-core
      graph_host: graph

    image: jeremyward/isharp-python-dev
    volumes:
     - $HOME/isharp-core:/isharp-core
    command: tail -f /dev/null
    depends_on:
      - mongo

    ports:
      - "8888:8888"
      - "8082:8082"
      - "80:80"


  mongo:
    container_name: isharp_mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    depends_on:
      - rabbit


  rabbit:
    container_name: isharp-rabbitmq
    image: rabbitmq:3.7-management
    ports:
      - "15672:15672"
      - "5672:5672"
    depends_on:
      - graph




  graph:
    container_name: isharp-graph
    image: neo4j
    volumes:
      - $HOME/neo4j/data:/data
    environment:
      NEO4J_AUTH: 'none'

    ports:
      - "7474:7474"
      - "7687:7687"



  zookeeper:
    image: ${REPOSITORY}/cp-zookeeper:${TAG}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  broker:
    image: ${REPOSITORY}/cp-server:${TAG}
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'


  control-center:
    image: ${REPOSITORY}/cp-enterprise-control-center:${TAG}
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021



#  jupyter:
#    container_name: isharp-demo-jupyter


# docker run  --publish=7474:7474 --publish=7687:7687  --env=NEO4J_AUTH=none --volume=$HOME/neo4j/data:/data neo4j